generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  slug      String    @unique
  products  Product[]
  createdAt DateTime  @default(now())
}

model Product {
  id         Int            @id @default(autoincrement())
  name       String
  slug       String         @unique
  price      Decimal
  stock      Int            @default(0)
  active     Boolean        @default(true)
  category   Category       @relation(fields: [categoryId], references: [id])
  categoryId Int
  images     ProductImage[]
  items      OrderItem[]
  createdAt  DateTime       @default(now())
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  url       String
  product   Product @relation(fields: [productId], references: [id])
  productId Int
}

model Order {
  id             Int         @id @default(autoincrement())
  status         String      @default("PENDING") // PENDING|PAID|SHIPPED|DELIVERED|CANCELLED
  subtotal       Decimal
  shippingCost   Decimal
  total          Decimal
  paymentMethod  String      // EMOLA|MPESA|BANK
  shippingMethod String      // STANDARD|EXPRESS|PICKUP|ZONE
  guestName      String?
  // relação com usuário (novo)
  userId         Int?
  user           User?       @relation(fields: [userId], references: [id])

  items          OrderItem[]
  address        Address?
  createdAt      DateTime    @default(now())

  @@index([userId])
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  name      String
  price     Decimal
  qty       Int
  image     String?
}

model Address {
  id         Int     @id @default(autoincrement())
  order      Order   @relation(fields: [orderId], references: [id])
  orderId    Int     @unique
  nome       String
  telefone   String
  provincia  String
  cidade     String
  bairro     String
  referencia String?
}

model PaymentMethod {
  id            Int     @id @default(autoincrement())
  type          String
  name          String  @unique
  active        Boolean @default(true)
  walletPhone   String?
  bankName      String?
  accountHolder String?
  accountNumber String?
}

model ShippingRule {
  id       Int     @id @default(autoincrement())
  service  String
  name     String  @unique
  baseCost Decimal
  zoneJson String?
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      String   @default("CLIENTE") // "ADMIN" | "GERENTE" | "CLIENTE"
  createdAt DateTime @default(now())
  orders    Order[]
}
